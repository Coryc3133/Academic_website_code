# rename user to screen_name
# since the people in the screen_name column
# here appear in the user column of the other data
rename(user = screen_name,
# Likewise, rename id to user_id
user_id = id) %>%
# now keep just the distinct entries
distinct(user, user_id) %>%
# and finally, right_join it to the users_friends_data
# that will add user_id into the users_friends_data, but not
# add any users to that data frame
right_join(users_friends_data) %>%
rename(friend_id = id)
elite_10k_sn <- elite_10k %>%
select(screen_name, id) %>%
rename(friend_id = id) %>%
filter(friend_id %in% users_friends_data$friend_id)
friends_only <- users_friends_data %>%
distinct(screen_name,
friend_id)
users_only <- users_friends_data %>%
distinct(user, user_id)
users_friends <- users_friends_data %>%
select(user_id, friend_id)
users_friends_elite <- users_friends_data %>%
select(user_id, friend_id) %>%
inner_join(elite_10k_sn) %>%
select(user_id, friend_id)
users_friends_elite %>%
count(user_id) %>%
nrow()
users_friends %>%
count(user_id) %>%
nrow()
library(Matrix)
users_friends_elite$user_id <- match(users_friends_elite$user_id, users_only$user_id)
users_friends_elite$friend_id <- match(users_friends_elite$friend_id, elite_10k_sn$friend_id)
uf_elite_smat <- sparseMatrix(i = users_friends_elite$user_id,
j = users_friends_elite$friend_id,
x = 1)
rownames(uf_elite_smat) <- users_only$user
colnames(uf_elite_smat) <- elite_10k_sn$screen_name
library(Matrix)
users_friends$user_id <- match (users_friends$user_id, users_only$user_id)
users_friends$friend_id <- match (users_friends$friend_id, friends_only$friend_id)
uf_smat <- sparseMatrix(i = users_friends$user_id,
j = users_friends$friend_id,
x = 1)
rownames(uf_smat) <- users_only$user
colnames(uf_smat) <- friends_only$screen_name
i <- Inf
while (i > sum(dim(uf_smat))){
i <- sum(dim(uf_smat))
cols <- which(colSums(uf_smat) >= 10)
rows <- which(rowSums(uf_smat) >= 10)
uf_smat_trimmed <- uf_smat[rows, cols]
}
library(caret)
set.seed(9812721)
users_partition <- createDataPartition(users_only$user_id,
p = .6,
list = FALSE)
users_test <- users_only[-users_partition,]
users_train <- users_only[users_partition,]
processed_tweets <- import("../data/users_processed_tweets.csv")
set.seed(7387465)
processed_tweets_missing_model <-  preProcess(processed_tweets[, -1], "bagImpute")
processed_tweets_imputed <- predict(processed_tweets_missing_model, processed_tweets[,-1])
processed_tweets_imputed <- cbind(screen_name = processed_tweets[, 1],
processed_tweets_imputed)
processed_tweets_train <- processed_tweets_imputed %>%
rename(user = screen_name) %>%
inner_join(users_train)
processed_tweets_test <- processed_tweets_imputed %>%
rename(user = screen_name) %>%
inner_join(users_test)
train_control <- trainControl(method = "cv",
number = 5,
savePredictions = TRUE)
ufelite_in_training <- rownames(uf_elite_smat) %in% users_train$user
library(irlba)
uf_elite_smat_train <- uf_elite_smat[ufelite_in_training,]
uf_elite_train_svd <- irlba(uf_elite_smat_train, nv = 50)
elite_v_rot_train <- unclass(varimax(uf_elite_train_svd$v)$loadings)
elite_u_rot_train <- as.data.frame(as.matrix(uf_elite_smat_train %*% elite_v_rot_train))
elite_u_rot_tibble_train <- as_tibble(elite_u_rot_train, rownames = "user")
train_data_all_elite <- processed_tweets_train %>%
left_join(elite_u_rot_tibble_train) %>%
na.omit()
set.seed(45133813)
train_elite_msent <- train_data_all_elite %>%
select(m_sentiment, 25:74) %>%
as_tibble()
sentiment_ridge_elite <- train(m_sentiment ~.,
data = train_elite_msent,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
sentiment_ridge_elite$results
set.seed(987648944)
train_elite_anger <- train_data_all_elite %>%
select(m_anger, 25:74) %>%
as_tibble()
anger_ridge_elite <- train(m_anger ~.,
data = train_elite_anger,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
anger_ridge_elite$results
set.seed(06531384)
train_elite_disgust <- train_data_all_elite %>%
select(m_disgust, 25:74) %>%
as_tibble()
disgust_ridge_elite <- train(m_disgust ~.,
data = train_elite_disgust,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
disgust_ridge_elite$results
set.seed(35871842)
train_elite_fear <- train_data_all_elite %>%
select(m_fear, 25:74) %>%
as_tibble()
fear_ridge_elite <- train(m_fear ~.,
data = train_elite_fear,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
fear_ridge_elite$results
set.seed(134439839)
train_elite_joy <- train_data_all_elite %>%
select(m_joy, 25:74) %>%
as_tibble()
joy_ridge_elite <- train(m_joy ~.,
data = train_elite_joy,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
joy_ridge_elite$results
set.seed(0623213871)
train_elite_sadness <- train_data_all_elite %>%
select(m_sadness, 25:74) %>%
as_tibble()
sadness_ridge_elite <- train(m_sadness ~.,
data = train_elite_sadness,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
sadness_ridge_elite$results
set.seed(39864184)
train_elite_surprise <- train_data_all_elite %>%
select(m_surprise, 25:74) %>%
as_tibble()
surprise_ridge_elite <- train(m_surprise ~.,
data = train_elite_surprise,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
surprise_ridge_elite$results
set.seed(9879037)
train_elite_trust <- train_data_all_elite %>%
select(m_trust, 25:74) %>%
as_tibble()
trust_ridge_elite <- train(m_trust ~.,
data = train_elite_trust,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
trust_ridge_elite$results
set.seed(30768059)
train_elite_favs <- train_data_all_elite %>%
select(m_favs, 25:74) %>%
as_tibble()
favs_ridge_elite <- train(m_favs ~.,
data = train_elite_favs,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
favs_ridge_elite$results
set.seed(60987108)
train_elite_rts <- train_data_all_elite %>%
select(m_rts, 25:74) %>%
as_tibble()
rts_ridge_elite <- train(m_rts ~.,
data = train_elite_rts,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
rts_ridge_elite$results
ufelite_in_test <- rownames(uf_elite_smat) %in% users_test$user
library(irlba)
uf_elite_smat_test <- uf_elite_smat[ufelite_in_test,]
elite_u_rot_test <- as.data.frame(as.matrix(uf_elite_smat_test %*% elite_v_rot_train))
elite_u_rot_tibble_test <- as_tibble(elite_u_rot_test, rownames = "user")
test_data_all <- processed_tweets_test %>%
left_join(elite_u_rot_tibble_test) %>%
select(user, user_id, everything())
sentiment_elite_pred <- predict(sentiment_ridge_elite, test_data_all)
anger_elite_pred <- predict(anger_ridge_elite, test_data_all)
disgust_elite_pred <- predict(disgust_ridge_elite, test_data_all)
fear_elite_pred <- predict(fear_ridge_elite, test_data_all)
joy_elite_pred <- predict(joy_ridge_elite, test_data_all)
sadness_elite_pred <- predict(sadness_ridge_elite, test_data_all)
surprise_elite_pred <- predict(surprise_ridge_elite, test_data_all)
trust_elite_pred <- predict(trust_ridge_elite, test_data_all)
favs_elite_pred <- predict(favs_ridge_elite, test_data_all)
rts_elite_pred <- predict(rts_ridge_elite, test_data_all)
rbind(postResample(sentiment_elite_pred, test_data_all$m_sentiment),
postResample(anger_elite_pred, test_data_all$m_anger),
postResample(disgust_elite_pred, test_data_all$m_disgust),
postResample(fear_elite_pred, test_data_all$m_fear),
postResample(joy_elite_pred, test_data_all$m_joy),
postResample(sadness_elite_pred, test_data_all$m_sadness),
postResample(surprise_elite_pred, test_data_all$m_surprise),
postResample(trust_elite_pred, test_data_all$m_trust),
postResample(favs_elite_pred, test_data_all$m_favs),
postResample(rts_elite_pred, test_data_all$m_rts)) %>%
cbind(c("Mean Sentiment of Tweets (+/-)",
"Mean Anger in Tweets",
"Mean disgust in Tweets",
"Mean Fear in Tweets",
"Mean Joy in Tweets",
"Mean Sadness in Tweets",
"Mean Surprise in Tweets",
"Mean Trust in Tweets",
"Mean # of Favorites",
"Mean # of Retweets"), .) %>%
as_tibble() %>%
rename(`Outcome being Predicted` = V1) %>%
mutate(RMSE = as.double(RMSE),
Rsquared = as.double(Rsquared),
MAE = as.double(MAE)) %>%
knitr::kable(digits = c(NA, 2, 2, 2),
caption = "Out of Sample Accuracy Predicting Sentiment, Emotion, and popularity of Tweets from Friends list")
in_training<- rownames(uf_smat_trimmed) %in% users_train$user
library(irlba)
uf_smat_train <- uf_smat_trimmed[in_training,]
uf_smat_train_svd <- irlba(uf_smat_train, nv = 5)
v_rot_train <- unclass(varimax(uf_smat_train_svd$v)$loadings)
u_rot_train <- as.data.frame(as.matrix(uf_smat_train %*% v_rot_train))
u_rot_tibble_train <- as_tibble(u_rot_train, rownames = "user")
train_data_all <- processed_tweets_train %>%
left_join(u_rot_tibble_train) %>%
na.omit()
set.seed(687565)
train_data_msent <- train_data_all %>%
select(m_sentiment, 25:29) %>%
as_tibble()
sentiment_ridge <- train(m_sentiment ~.,
data = train_data_msent,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
sentiment_ridge$results
set.seed(135876)
train_data_anger <- train_data_all %>%
select(m_anger, 25:29) %>%
as_tibble()
anger_ridge <- train(m_anger ~.,
data = train_data_anger,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
anger_ridge$results
set.seed(69878)
train_data_disgust <- train_data_all %>%
select(m_disgust, 25:29) %>%
as_tibble()
disgust_ridge <- train(m_disgust ~.,
data = train_data_disgust,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
disgust_ridge$results
set.seed(873)
train_data_fear <- train_data_all %>%
select(m_fear, 25:29) %>%
as_tibble()
fear_ridge <- train(m_fear ~.,
data = train_data_fear,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
fear_ridge$results
set.seed(18)
train_data_joy <- train_data_all %>%
select(m_joy, 25:29) %>%
as_tibble()
joy_ridge <- train(m_joy ~.,
data = train_data_joy,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
joy_ridge$results
set.seed(9711)
train_data_sadness <- train_data_all %>%
select(m_sadness, 25:29) %>%
as_tibble()
sadness_ridge <- train(m_sadness ~.,
data = train_data_sadness,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
sadness_ridge$results
set.seed(1837)
train_data_surprise <- train_data_all %>%
select(m_surprise, 25:29) %>%
as_tibble()
surprise_ridge <- train(m_surprise ~.,
data = train_data_surprise,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
surprise_ridge$results
set.seed(7815)
train_data_trust <- train_data_all %>%
select(m_trust, 25:29) %>%
as_tibble()
trust_ridge <- train(m_trust ~.,
data = train_data_trust,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
trust_ridge$results
set.seed(3014)
train_data_favs <- train_data_all %>%
select(m_favs, 25:29) %>%
as_tibble()
favs_ridge <- train(m_favs ~.,
data = train_data_favs,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
favs_ridge$results
set.seed(49125032)
train_data_rts <- train_data_all %>%
select(m_rts, 25:29) %>%
as_tibble()
rts_ridge <- train(m_rts ~.,
data = train_data_rts,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
rts_ridge$results
sentiment_pred <- predict(sentiment_ridge, test_data_all)
anger_pred <- predict(anger_ridge, test_data_all)
disgust_pred <- predict(disgust_ridge, test_data_all)
fear_pred <- predict(fear_ridge, test_data_all)
joy_pred <- predict(joy_ridge, test_data_all)
sadness_pred <- predict(sadness_ridge, test_data_all)
surprise_pred <- predict(surprise_ridge, test_data_all)
trust_pred <- predict(trust_ridge, test_data_all)
favs_pred <- predict(favs_ridge, test_data_all)
rts_pred <- predict(rts_ridge, test_data_all)
rbind(postResample(sentiment_pred, test_data_all$m_sentiment),
postResample(anger_pred, test_data_all$m_anger),
postResample(disgust_pred, test_data_all$m_disgust),
postResample(fear_pred, test_data_all$m_fear),
postResample(joy_pred, test_data_all$m_joy),
postResample(sadness_pred, test_data_all$m_sadness),
postResample(surprise_pred, test_data_all$m_surprise),
postResample(trust_pred, test_data_all$m_trust),
postResample(favs_pred, test_data_all$m_favs),
postResample(rts_pred, test_data_all$m_rts)) %>%
cbind(c("Mean Sentiment of Tweets (+/-)",
"Mean Anger in Tweets",
"Mean disgust in Tweets",
"Mean Fear in Tweets",
"Mean Joy in Tweets",
"Mean Sadness in Tweets",
"Mean Surprise in Tweets",
"Mean Trust in Tweets",
"Mean # of Favorites",
"Mean # of Retweets"), .) %>%
as_tibble() %>%
rename(`Outcome being Predicted` = V1) %>%
mutate(RMSE = as.double(RMSE),
Rsquared = as.double(Rsquared),
MAE = as.double(MAE)) %>%
knitr::kable(digits = c(NA, 2, 2, 2),
caption = "Out of Sample Accuracy Predicting Sentiment, Emotion, and popularity of Tweets from Friends list")
# Note, removing user and user_id (since they aren't features)
# and also moving the SD around favorites, since that would
# be related to the mean.
train_lings_favs <- processed_tweets_train %>%
select(-user, -user_id, -sd_favs,
-m_rts, -sd_rts)
set.seed(7356)
favs_from_lings_ridge <- train(m_favs ~.,
data = train_lings_favs,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
favs_from_lings_ridge$results
train_lings_rts <- processed_tweets_train %>%
select(-user, -user_id, -sd_rts,
-m_favs, -sd_favs)
set.seed(6345)
favs_from_lings_ridge <- train(m_rts ~.,
data = train_lings_rts,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
favs_from_lings_ridge$results
set.seed(3244813)
train_elite_and_ling_favs <- train_data_all_elite %>%
select(-user, -user_id, -m_rts, -sd_favs, -sd_rts) %>%
as_tibble()
favs_ling_elites_ridge <- train(m_favs ~.,
data = train_elite_and_ling_favs,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
favs_ling_elites_ridge$results
set.seed(63185)
train_elite_and_ling_rts <- train_data_all_elite %>%
select(-user, -user_id, -m_favs, -sd_favs, -sd_rts) %>%
as_tibble()
rts_ling_elites_ridge <- train(m_rts ~.,
data = train_elite_and_ling_rts,
method = "ridge",
trControl = train_control,
preProc = c("center", "scale"))
rts_ling_elites_ridge$results
ggplot(processed_tweets, aes(x = m_sentiment)) +
geom_histogram()
ggplot(processed_tweets, aes(x = m_anger)) +
geom_histogram()
ggplot(processed_tweets, aes(x = m_disgust)) +
geom_histogram()
ggplot(processed_tweets, aes(x = m_fear)) +
geom_histogram()
ggplot(processed_tweets, aes(x = m_joy)) +
geom_histogram()
ggplot(processed_tweets, aes(x = m_sadness)) +
geom_histogram()
ggplot(processed_tweets, aes(x = m_surprise)) +
geom_histogram()
ggplot(processed_tweets, aes(x = m_trust)) +
geom_histogram()
ggplot(processed_tweets, aes(x = m_favs)) +
geom_histogram()
ggplot(processed_tweets, aes(x = m_rts)) +
geom_histogram()
qgraph::qgraph(users_friends_elite)
citation()
citation(Matrix)
citation("Matrix")
citation("caret")
?caret
setwd("C:/Users/Cory/OneDrive - University Of Oregon/Work/Costello-academic-site")
blogdown::hugo_build()
git init
blogdown::hugo_build()
blogdown::hugo_build()
blogdown::serve_site()
blogdown::hugo_build()
blogdown::serve_site()
blogdown::hugo_build()
blogdown::build_site()
install.packages("blogdown")
blogdown::build_site()
blogdown::install_hugo()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::hugo_build()
blogdown::hugo_build()
blogdown::hugo_build()
blogdown::hugo_build()
blogdown::serve_site()
blogdown::serve_site()
blogdown::install_hugo()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::hugo_build()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
servr::daemon_stop("210065416")
blogdown::serve_site()
servr::daemon_stop("210065416")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::hugo_build()
