install.packages("papaja")
devtools::install_github("crsh/papaja")
devtools::install_github("crsh/papaja")
devtools::install_github("crsh/papaja")
install.packages("backports")
devtools::install_github("crsh/papaja")
papaja::apa_print(model)
# minor note, though we usually refer to matrices
# with capital letters, we'll use a lower case
# x. R is case sensitive, and I recommend always using
# lower case letters (a style called "snake_case")
x <- matrix(c(1, 1, 1, 1, # what goes here?
1, 2, 7, 8, # X1 column
1, 2, 2, 1), # X2 column
nrow = 4, ncol = 3,
byrow = FALSE)
x
y <- c(4, 5, 12, 14)
y
x_t <-  t(x)
x
x_t
xt_x <- x_t %*% x
xtx_inv <- solve(xt_x)
xt_y <- x_t %*% y
b <- xtx_inv %*% xt_y
b
colnames(x) <- c("intercept", "x1", "x2")
# check that it worked
x
y <- as.matrix(y)
colnames(y) <- "y"
y
df <- as.data.frame(cbind(y, x))
# note, if you wanted to do this
# in the tidyverse style, with pipes, it
# would look like this:
#library(tidyverse)
#df <- cbind(y, x) %>%
#  as.data.frame()
model <- lm(y ~ x1 + x2, # remember, outcome ~ predictors
data = df) # enter the dataframe
summary(model)
comparison_table <- cbind(b, # coefficient matrix
model$coefficients) # coefficients from lm
colnames(comparison_table) <- c("matrix", "lm")
comparison_table
papaja::apa_print(model)
papaja::apa_print.lm(model)
library(papaja)
apa_print(model)
model_apa <- apa_print(model)
model_apa$full_result
model_apa$apa_table
model_apa$table
knitr::kable(model_apa$table)
apa_table(model_apa$table)
pander(model)
pander::pander(model)
?pander
pander::pander(model, digits = 2)
?panderOptions
pander::pander(model, digits = c(0, 2, 2, 2, 3)
)
panderOptions("digits", c(NA, 2, 2, 2, 3))
pander::panderOptions("digits", c(NA, 2, 2, 2, 3))
pander::pander(model)
pander::panderOptions("digits", c(0, 2, 2, 2, 3))
pander::pander(model)
install.packages("stargazer")
library(stargazer)
stargazer(model)
pander::pander(model)
pander::panderOptions("round", 2)
pander::pander(model)
# minor note, though we usually refer to matrices
# with capital letters, we'll use a lower case
# x. R is case sensitive, and I recommend always using
# lower case letters (a style called "snake_case")
x <- matrix(c(1, 1, 1, 1, # what goes here?
1, 2, 7, 8, # X1 column
1, 2, 2, 1), # X2 column
nrow = 4, ncol = 3,
byrow = FALSE)
x
y <- c(4, 5, 12, 14)
y
x_t <-  t(x)
x
x_t
xt_x <- x_t %*% x
xtx_inv <- solve(xt_x)
xt_y <- x_t %*% y
b <- xtx_inv %*% xt_y
b
colnames(x) <- c("intercept", "x1", "x2")
# check that it worked
x
y <- as.matrix(y)
colnames(y) <- "y"
y
df <- as.data.frame(cbind(y, x))
# note, if you wanted to do this
# in the tidyverse style, with pipes, it
# would look like this:
#library(tidyverse)
#df <- cbind(y, x) %>%
#  as.data.frame()
model <- lm(y ~ x1 + x2, # remember, outcome ~ predictors
data = df) # enter the dataframe
summary(model)
comparison_table <- cbind(b, # coefficient matrix
model$coefficients) # coefficients from lm
colnames(comparison_table) <- c("matrix", "lm")
comparison_table
# uncomment the install.packages
# command below if needed.
#install.packages("pander")
library(pander)
pander::panderOptions("round", 2)
pander::pander(model)
broom::broom(model)
broom::tidy(model)
# uncomment the install.packages
# command below if needed.
#install.packages("pander")
library(broom)
?tidy
# uncomment the install.packages
# command below if needed.
#install.packages("broom")
library(broom)
?knitr::kable
tidy(model) %>%
knitr::kable(digits = c(NA, 2, 2, 2, 3), # everything rounded to
# 2 except the labels (NA) and p's (3)
caption = "Results of Regressing Y on X1 and X2")
library(tidyverse)
tidy(model) %>%
knitr::kable(digits = c(NA, 2, 2, 2, 3), # everything rounded to
# 2 except the labels (NA) and p's (3)
caption = "Results of Regressing Y on X1 and X2")
tidy(model) %>% # first run tidy on the model;
# this is the main thing broom does.
# Then pipe it to knitr's kable function
knitr::kable(digits = c(NA, 2, 2, 2, 3), # set digits; everything rounded to
# 2 except the labels (NA) and p's (3 digits)
caption = "Results of Regressing Y on X1 and X2") # provide a table caption
# minor note, though we usually refer to matrices
# with capital letters, we'll use a lower case
# x. R is case sensitive, and I recommend always using
# lower case letters (a style called "snake_case")
x <- matrix(c(1, 1, 1, 1, # what goes here?
1, 2, 7, 8, # X1 column
1, 2, 2, 1), # X2 column
nrow = 4, ncol = 3,
byrow = FALSE)
x
y <- c(4, 5, 12, 14)
y
x_t <-  t(x)
x
x_t
xt_x <- x_t %*% x
xtx_inv <- solve(xt_x)
xt_y <- x_t %*% y
b <- xtx_inv %*% xt_y
b
colnames(x) <- c("intercept", "x1", "x2")
# check that it worked
x
y <- as.matrix(y)
colnames(y) <- "y"
y
df <- as.data.frame(cbind(y, x))
# note, if you wanted to do this
# in the tidyverse style, with pipes, it
# would look like this:
#library(tidyverse)
#df <- cbind(y, x) %>%
#  as.data.frame()
model <- lm(y ~ x1 + x2, # remember, outcome ~ predictors
data = df) # enter the dataframe
summary(model)
comparison_table <- cbind(b, # coefficient matrix
model$coefficients) # coefficients from lm
colnames(comparison_table) <- c("matrix", "lm")
comparison_table
tidy(model) %>% # first run tidy on the model;
# this is the main thing broom does.
# Then pipe it to knitr's kable function
knitr::kable(digits = c(NA, 2, 2, 2, 3), # set digits; everything rounded to
# 2 except the labels (NA) and p's (3 digits)
caption = "Results of Regressing Y on X1 and X2") # provide a table caption
tidy(model)
tidy(model) %>% # we'll still run tidy on the model first
# but we'll pass it to rename (part of the tidyverse/dplyr)
# and rename some of the columns to be more similar to how
# we normally report these things.
# rename is pretty easy, it's a way to rename column names
# the general format is rename(new_name = old_name),
# where new_name is the new name you want the column to have
# and old_name is the old name that you're replacing.
# both should be unquoted (like below)
rename(coefficient = term,
*b* = estimate,
tidy(model) %>% # we'll still run tidy on the model first
# but we'll pass it to rename (part of the tidyverse/dplyr)
# and rename some of the columns to be more similar to how
# we normally report these things.
# rename is pretty easy, it's a way to rename column names
# the general format is rename(new_name = old_name),
# where new_name is the new name you want the column to have
# and old_name is the old name that you're replacing.
# both should be unquoted (like below)
rename(coefficient = term,
b = estimate,
SE = std.error,
t = statistic,
p = p.value) %>%
knitr::kable(digits = c(NA, 2, 2, 2, 3), # Then we'll do the same as above with kable
caption = "Results of Regressing Y on X1 and X2")
version()
cite
cite()\
cite()
citation()
# run on new computer / r version
# Set this to the same working directory as
# you used on your old computer
setwd("../R libraries")
load("Rpackages")
# This may take a few minutes, depending on how many packages you
# have.
for (p in setdiff(packages, installed.packages()[,"Package"]))
install.packages(p)
install.packages("tidymodels")
library(keras)
keras_model_sequential() %>%
layer_dense(units = 64, activation = "relu",
input_shape = dim(as.matrix(uf_smat_train_trimmed_2p))[2],
kernel_regularizer = regularizer_l2(l = 0.01)) %>%
layer_dense(units = 64, activation = "relu",
kernel_regularizer = regularizer_l2(l = 0.01)) %>%
layer_dense(units = 1)
tensorflow::install_tensorflow()
library(keras)
keras_model_sequential() %>%
layer_dense(units = 64, activation = "relu",
input_shape = dim(as.matrix(uf_smat_train_trimmed_2p))[2],
kernel_regularizer = regularizer_l2(l = 0.01)) %>%
layer_dense(units = 64, activation = "relu",
kernel_regularizer = regularizer_l2(l = 0.01)) %>%
layer_dense(units = 1)
keras_model_sequential() %>%
layer_dense(units = 64, activation = "relu",
input_shape = dim(as.matrix(uf_smat_train_trimmed_2p))[2],
kernel_regularizer = regularizer_l2(l = 0.01)) %>%
layer_dense(units = 64, activation = "relu",
kernel_regularizer = regularizer_l2(l = 0.01)) %>%
layer_dense(units = 1)
citation("rtweet")
citation(
"twitteR"
)
blogdown::serve_site()
setwd("C:/Users/coryc3133/OneDrive - University Of Oregon/Work/Costello-academic-site/content/home")
setwd("../..")
blogdown::serve_site()
blogdown::build_site()
