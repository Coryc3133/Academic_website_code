blogdown::serve_site()
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
library(rio)
library(tidyverse)
library(tidygraph)
library(visNetwork)
library(rtweet)
library(igraph)
dead_relatives <- import("./spotify_data_dead/dead_relative_10steps.csv", skip = 1) %>%
select(-V1) %>%
rename(artist = V2,
relative = V3)
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_walktrap(),
#group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
dead_labs <- dead_relatives %>%
as_tbl_graph() %>%
mutate(group = group_leading_eigen(),
importance = centrality_eigen()) %>%
group_by(group) %>%
top_n(1) %>%
as_tibble() %>%
rename(label = name) %>%
select(group, label) %>%
arrange(group)
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_walktrap(),
#group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
dead_labs <- dead_relatives %>%
as_tbl_graph() %>%
mutate(group = group_walktrap(),
importance = centrality_eigen()) %>%
group_by(group) %>%
top_n(1) %>%
as_tibble() %>%
rename(label = name) %>%
select(group, label) %>%
arrange(group)
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_walktrap(),
#group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_walktrap(),
group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_biconnected_component(),
group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_label_prop(),
group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_edge_betweenness(),
group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
dead_labs <- dead_relatives %>%
as_tbl_graph() %>%
mutate(group = group_walktrap(),
importance = group_edge_betweenness()) %>%
group_by(group) %>%
top_n(1) %>%
as_tibble() %>%
rename(label = name) %>%
select(group, label) %>%
arrange(group)
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_edge_betweenness(),
group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
dead_labs
dead_labs <- dead_relatives %>%
as_tbl_graph() %>%
mutate(group = group_edge_betweenness(),
importance = eigen_centrality()) %>%
group_by(group) %>%
top_n(1) %>%
as_tibble() %>%
rename(label = name) %>%
select(group, label) %>%
arrange(group)
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_edge_betweenness(),
group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
dead_labs <- dead_relatives %>%
as_tbl_graph() %>%
mutate(group = group_edge_betweenness(),
importance = centrality_eigen()) %>%
group_by(group) %>%
top_n(1) %>%
as_tibble() %>%
rename(label = name) %>%
select(group, label) %>%
arrange(group)
dead_labs <- dead_relatives %>%
as_tbl_graph() %>%
mutate(group = group_edge_betweenness(),
importance = centrality_eigen()) %>%
group_by(group) %>%
top_n(1) %>%
as_tibble() %>%
rename(label = name) %>%
select(group, label) %>%
arrange(group)
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_edge_betweenness(),
group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_walktrap(),
group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
dead_labs <- dead_relatives %>%
as_tbl_graph() %>%
mutate(group = group_walktrap(),
importance = centrality_eigen()) %>%
group_by(group) %>%
top_n(1) %>%
as_tibble() %>%
rename(label = name) %>%
select(group, label) %>%
arrange(group)
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_walktrap(),
group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
dead_labs <- dead_relatives %>%
as_tbl_graph() %>%
mutate(group = group_leading_eigen(),
importance = centrality_eigen()) %>%
group_by(group) %>%
top_n(1) %>%
as_tibble() %>%
rename(label = name) %>%
select(group, label) %>%
arrange(group)
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_leading_eigen(),
group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
dead_labs <- dead_relatives %>%
as_tbl_graph() %>%
mutate(group = group_spinglass(),
importance = centrality_eigen()) %>%
group_by(group) %>%
top_n(1) %>%
as_tibble() %>%
rename(label = name) %>%
select(group, label) %>%
arrange(group)
dead_labs <- dead_relatives %>%
as_tbl_graph() %>%
mutate(group = group_spinglass(),
importance = centrality_eigen()) %>%
group_by(group) %>%
top_n(1) %>%
as_tibble() %>%
rename(label = name) %>%
select(group, label) %>%
arrange(group)
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_spinglass(),
group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
dead_labs
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_spinglass(),
group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_spinglass(),
#group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
dead_labs <- dead_relatives %>%
as_tbl_graph() %>%
mutate(group = group_walktrap(),
importance = centrality_eigen()) %>%
group_by(group) %>%
top_n(1) %>%
as_tibble() %>%
rename(label = name) %>%
select(group, label) %>%
arrange(group)
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_walktrap(),
group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
dead_labs <- dead_relatives %>%
as_tbl_graph() %>%
mutate(group = group_fast_greedy(),
importance = centrality_eigen()) %>%
group_by(group) %>%
top_n(1) %>%
as_tibble() %>%
rename(label = name) %>%
select(group, label) %>%
arrange(group)
dead_labs <- dead_relatives %>%
as_tbl_graph() %>%
mutate(group = group_walktrap(),
importance = centrality_eigen()) %>%
group_by(group) %>%
top_n(1) %>%
as_tibble() %>%
rename(label = name) %>%
select(group, label) %>%
arrange(group)
dead_relatives %>%
as_tbl_graph() %>%
activate(nodes) %>%
mutate(group = group_walktrap(),
group = factor(group, labels = dead_labs$label),
importance = centrality_eigen()) %>%
arrange(name) %>%
visIgraph(physics = TRUE) %>%
visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
selectedBy = "group",
nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 23) %>%
visPhysics(forceAtlas2Based = list("avoidOverlap" = 1)) %>%
visLegend()
